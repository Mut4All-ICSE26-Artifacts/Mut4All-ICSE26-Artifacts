Mutation Operator: Modify Function Parameter Type

Target Construct: Function Declaration
Where It Applies: Apply this mutation to function declarations, specifically targeting the parameter types of existing functions.

Mutation Rule:
1. Identify a function declaration with at least one parameter in the seed program.
2. Modify the type of the first parameter to a pointer type. If the first parameter is already a pointer type, modify it to a pointer to a pointer of the same type.
3. Ensure that the modified function is invoked elsewhere in the program with the new parameter type, using an appropriate existing variable or expression.

Example:
Original Code:
```
void calculate(int value);
void process() {
    calculate(5);
}
```

Mutated Code:
```
void calculate(int* value);
void process() {
    int temp = 5;
    calculate(&temp);
}
```

This mutation involves altering the type of a function parameter to a pointer type, which can introduce potential issues in compiler handling, as seen in the bug report related to type handling. This type of mutation commonly impacts the compiler's type-checking and pointer arithmetic logic, potentially leading to crashes or assertion failures.