Mutation Operator: Modify Function Exception Specifications

Target: Function Declarations

Mutation Rule:
1. Identify a function that has an exception specification using `noexcept`.
2. Modify the `noexcept` expression by introducing a non-constant expression that involves a function or operation known to be non-constexpr.
3. Ensure the expression in `noexcept` cannot be evaluated at compile time, such as using a function call that is not marked as `constexpr`.

Example:
Starting Code:
```
int myFunction() noexcept(true) {
    // function implementation
}
```

Mutated Code:
```
int helperFunction() { return 42; }

int myFunction() noexcept(helperFunction() > 0) {
    // function implementation
}
```

Explanation:
The `helperFunction()` is a regular function and cannot be evaluated as a constant expression. By using it within the `noexcept` specification of `myFunction`, it results in a non-constant expression error within `noexcept`, which can potentially trigger a crash or internal compiler error similar to the bug described.