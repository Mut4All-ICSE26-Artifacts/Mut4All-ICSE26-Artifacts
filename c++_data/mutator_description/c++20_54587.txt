Mutation Operator: Modify Consteval Constructor Usage

Target Construct: Template Class Consteval Constructors

Mutation Rule:
1. Identify a template class with a consteval constructor.
2. Replace the lambda expression used for compile-time automatic deduction (`constexpr` object of the template class initialized by a lambda) with a `constexpr` function.
3. Ensure the function returns a type compatible with the template parameter of the constructor.

Instructions:
- Locate the `constexpr` object instantiation involving a lambda expression in the source code.
- Remove the lambda expression and replace it with a separately defined `constexpr` function.
- Use this function to initialize the `constexpr` object.

Example:
Original Code:
```cpp
template<class F>
struct Sample {
    consteval Sample(F) {}
};

constexpr Sample sample_instance = []() noexcept -> void {};
```

Mutated Code:
```cpp
template<class F>
struct Sample {
    consteval Sample(F) {}
};

constexpr void sampleFunction() noexcept {}

constexpr Sample sample_instance(sampleFunction);
```

This mutation operator replaces the lambda expression with a function to test if the change in code structure might trigger a similar compiler bug.