Mutation Operator

Target: Lambda Expressions with Reference Captures

Mutation Rule:

1. Identify a lambda expression that captures variables by reference.
2. Change the capture mode from reference to by-value for the identified lambda.
3. Adjust the lambda's operations to ensure that the change in capture mode does not result in semantic errors (e.g., modify the operations on captured variables to use local copies instead of modifying the original reference).

Example:

Original Code (in the context of the provided bug report):
```cpp
int one = 1;
auto factory(int& x = one) {
    return [&](this auto self) {
      x;
    };
};
```

Mutation Steps:

1. Change the capture mode from by-reference to by-value:
```cpp
auto factory(int x = one) {
    return [=](this auto self) {
      x;
    };
};
```

2. Ensure that operations on `x` are compatible with by-value semantics. For example, if the lambda modifies `x`, consider whether this change should affect the original variable or just be local to the lambda. Adjust accordingly to maintain the intended behavior of the program.