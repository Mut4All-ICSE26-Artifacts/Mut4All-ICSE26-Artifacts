Mutation Operator: Constexpr Function Mutation

Target: Constexpr Functions

Mutation Rule:
1. Identify a function in the seed program that is defined with the `constexpr` specifier.
2. Select a simple non-constexpr function or create a new one if none exist. Ensure the function returns a basic data type (e.g., int, double).
3. Modify the selected function to include the `constexpr` specifier, ensuring it meets all constexpr criteria (e.g., contains only a return statement with a constant expression).
4. Replace any calls to this function in the seed program to ensure they are within a constexpr context, such as within the initialization of a constexpr variable.

Example:
Given:
```cpp
int add(int a, int b) {
    return a + b;
}

int main() {
    int result = add(3, 4);
    return 0;
}
```

After Mutation:
```cpp
constexpr int add(int a, int b) {
    return a + b;
}

int main() {
    constexpr int result = add(3, 4);
    return 0;
}
```

By converting an existing function to a constexpr function and utilizing it in constexpr contexts, this mutation can explore areas where the compiler's constexpr evaluation might fail or cause a crash.