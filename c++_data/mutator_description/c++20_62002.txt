Mutation Operator: Modify `consteval` Constructor

Target: Class constructor defined with the `consteval` keyword.

Mutation Rule:
1. Identify a `consteval` constructor within a class.
2. Replace the `consteval` keyword with `constexpr`.
3. Ensure the modified constructor calls a function that is not `constexpr`, but can be evaluated at compile-time for some inputs.

Example:
Original Code:
```
struct MyClass {
  consteval MyClass() {
    compileTimeFunction();
  }
};
```

Mutation:
1. Locate the `consteval` keyword.
2. Change `consteval MyClass()` to `constexpr MyClass()`.
3. Modify or ensure `compileTimeFunction()` is a function that can be evaluated at compile-time but is not marked as `constexpr`.

Mutated Code:
```
struct MyClass {
  constexpr MyClass() {
    runtimeFunction();
  }
};

void runtimeFunction() {
  // A function definition that is not constexpr but can be evaluated at compile-time
}
```

This mutation tests the compiler's ability to handle constructors transitioning from `consteval` to `constexpr` with functions that may not always produce compile-time evaluable results.