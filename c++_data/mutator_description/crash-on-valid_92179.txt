Mutation Operator: Modify Function Return Type

Target: Function Definitions

Mutation Rule:
1. Identify a function within the seed program that returns a non-void type, such as `int`, `float`, or a user-defined type.
2. Change the return type of the function to `void`.
3. Ensure that the function body no longer attempts to return a value, as the return type is now `void`.
4. If the function was part of a class or struct, ensure that no overriding or overloading concerns are violated due to this change. 

Example:
Original Function:
```
int calculateSum(int a, int b) {
    return a + b;
}
```

Mutated Function:
```
void calculateSum(int a, int b) {
    // The function no longer returns a value
}
```

Application Notes:
- Apply this mutation operator to seed programs where functions are used in various contexts, such as members of classes, standalone functions, or lambdas.
- This mutation is particularly effective in triggering compiler issues related to type checking, function overloading, and return statement handling.