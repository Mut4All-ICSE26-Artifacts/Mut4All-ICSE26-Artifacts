Mutation Operator:
Target: Function with default arguments in a friend declaration
Mutation Rule: 
1. Identify a friend function declaration inside a templated struct or class, where the function has one or more parameters with default arguments.
2. For the parameter(s) with default argument(s), remove the default argument(s).
3. Ensure the function call matches the number of parameters after the default arguments are removed.

Example:
Original Code:
```cpp
template<typename T>
struct MyStruct {
  friend void myFunction(MyStruct, int = 5);
};

void test() {
  myFunction(MyStruct<int>{});
}
```

Mutated Code:
```cpp
template<typename T>
struct MyStruct {
  friend void myFunction(MyStruct, int);
};

void test() {
  myFunction(MyStruct<int>{}, 5);
}
```

Explanation:
The mutation operator targets friend function declarations within templated structs or classes that utilize default arguments. By removing the default arguments from the friend function's parameters, any function call within the code that relies on these defaults must be updated to explicitly provide these arguments. This change can potentially stress the compiler's handling of friend functions, default arguments, and templates, increasing the likelihood of triggering edge cases leading to crashes or unexpected behavior.