Mutation Operator: Modify Function Return Type to Pointer Type

Target Code Construct: Function declarations, specifically focusing on modifying the return type of functions.

Mutation Rule:
1. Identify a function declaration in the seed program.
2. Modify the return type of the function to a pointer type of its current return type.
3. Ensure the rest of the code is unmodified to observe how it handles the modified return type.

Example:
Original Code:
```
int myFunction() {
    return 42;
}
```

Mutation:
```
int* myFunction() {
    return 42; // Note: This mutation will lead to a type mismatch as an integer cannot be directly assigned to an int*.
}
```

Explanation:
- Initially, the function `myFunction` returns an `int` type.
- By altering its return type to `int*`, the function now returns a pointer to an integer.
- This change is likely to lead to undefined behavior or errors in the code where the function is used, as it changes the expected type of the return value, potentially triggering edge cases in the compiler's handling of type mismatches.