Mutation Operator: Variadic Template Modification

Target Code Construct: Variadic Templates and Class Templates

Mutation Rule:
1. Identify a class template that uses variadic templates (e.g., `template<typename... Args>`).
2. Introduce a non-type template parameter to the existing variadic template class. This parameter should be placed before the variadic template parameter pack.
3. As an example, transform a class with the signature `template<typename... Args> class Example` into `template<int N, typename... Args> class Example`.
4. Inside the class, utilize the non-type template parameter in a context-sensitive manner. For illustration, if a member function or constructor exists, make use of the non-type parameter in a statement (e.g., a static assertion or an array declaration).
5. Recompile the code to see if the mutation causes a compiler crash or unexpected behavior.

This mutation is likely to trigger bugs in the compiler's template instantiation and parsing logic when handling complex template parameter combinations.