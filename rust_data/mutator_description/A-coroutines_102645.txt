Mutation Operator: Modify Generator Function to Reference Undefined Variable

Target: This mutation operator applies to generator functions within the Rust code.

Mutation Rule:
1. Identify a generator function in the seed program. A generator function typically makes use of the `yield` keyword.
2. Within the body of the generator function, locate a statement where a variable is assigned a value.
3. Replace the right-hand side of this assignment with a reference to an undefined variable. For example, if the assignment is `a = 5;`, replace `5` with an undefined variable like `undefined_var`.
4. Ensure that the undefined variable does not exist in the current scope or any parent scope to trigger an error.

Example:
Original Code (generator function with defined variable):
```rust
let mut generator_func = || {
    let x = 10;
    yield;
    x = 5;
};
```

Mutated Code (generator function with undefined variable reference):
```rust
let mut generator_func = || {
    let x = 10;
    yield;
    x = undefined_var; // Reference to an undefined variable
};
```

Explanation: This mutation introduces a reference to an undefined variable within the generator function. The mutation is likely to trigger a compilation error or a compiler crash due to the unresolved reference, thereby providing valuable information about the stability and robustness of the compiler's handling of variable scopes within generator contexts.