Mutation Operator

Target: Struct with Const Generics

Mutation Rule:
1. Identify a struct definition that uses const generics in the form `pub struct StructName<const N: usize>(TypeName<{ expression }>)`.
2. Replace the `expression` within the const generic parameter with a direct numeric value instead of a macro invocation or complex expression.

Example:

Before Mutation:
```
pub struct S<const V: usize>(Const<{ wrap!(V) }>);
```

After Mutation:
```
pub struct S<const V: usize>(Const<{ 5 }>);
```

Explanation:
The mutation targets the const generic expression within a struct definition, replacing it with a simple numeric value. This eliminates dependency on macro invocations for the expression, which could lead to internal compiler errors due to complexity in processing const generics with macros. The mutation ensures that the expression is a straightforward constant, reducing unexpected interactions between macros and const generics.