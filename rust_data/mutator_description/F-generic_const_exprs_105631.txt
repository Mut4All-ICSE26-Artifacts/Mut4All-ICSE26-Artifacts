Mutation Operator: Modify Generic Parameter Defaults

Target Structure: Structs with generic parameters

Mutation Rule:
1. Identify a struct definition that includes generic parameters with default values, such as `struct X<const N: u32 = 5, T>;`.
2. Modify the order of the generic parameters so that the parameter with the default value is not trailing.
3. Ensure at least one generic parameter with a default value is neither last nor adjacent to another parameter with a default, such as changing `struct X<const N: u32 = 5, T>;` to `struct X<T, const N: u32 = 5>;`.
4. Compile the mutated code to check whether the compiler generates errors or unexpected behavior.

Pseudo-code Example:
Original Struct:
```
struct Container<const SIZE: usize = 10, T> {
    elements: [T; SIZE],
}
```

Mutated Struct:
```
struct Container<T, const SIZE: usize = 10> {
    elements: [T; SIZE],
}
```

This mutation operator targets the ordering of generic parameters, especially focusing on moving parameters with default values to non-trailing positions.