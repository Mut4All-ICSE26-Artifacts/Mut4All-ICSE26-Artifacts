
Mutation Operator: Modify Trait Bounds

Target: Traits with Higher-Ranked Trait Bounds (HRTBs)

Mutation Rule:
1. Identify a trait with a higher-ranked trait bound (HRTB). For example, a trait defined with `for<T>`.
2. Change the trait bound to include a specific lifetime instead of using a non-lifetime variable.
3. If the trait is defined as `trait TraitName: for<T> AnotherTrait<T>`, replace `for<T>` with `for<'a>`.
4. Apply this change to all HRTBs in the seed program.

Example:
Original:
```
trait Foo: for<T> Bar<T> {}
```

Mutated:
```
trait Foo: for<'a> Bar<&'a T> {}
```

This mutation forces the compiler to handle lifetimes explicitly, which could reveal bugs related to lifetime handling in higher-ranked trait bounds. By modifying the trait bounds to explicitly include a lifetime, you can explore issues around lifetime management and variance in the compiler.