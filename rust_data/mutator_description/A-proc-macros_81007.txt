Mutation Operator:

Target Code Construct: Function Definitions

Mutation Rule:
1. Locate function definitions within the Rust code, particularly those inside a macro invocation.
2. Identify any existing doc comments (e.g., `/// This is a doc comment`) associated with the function.
3. Replace the doc comment with a normal comment (e.g., `// This is a normal comment`) immediately above the function definition.
4. Ensure the rest of the function remains unchanged.

Example:

Original Code:
```rust
/// This function does something important.
fn important_function() {
    // Function implementation
}
```

Mutated Code:
```rust
// This function does something important.
fn important_function() {
    // Function implementation
}
```

This mutation operator is designed to explore the differences in how the Rust compiler, particularly its procedural macros, handles parsing and processing of documentation comments versus regular comments when they are applied to functions. The changed comment format may trigger different parsing behavior or errors, particularly in the context of procedural macro expansions.