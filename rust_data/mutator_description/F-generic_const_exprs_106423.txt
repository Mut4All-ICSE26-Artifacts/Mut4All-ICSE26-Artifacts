Mutation Operator: Modify Constant Function Parameter

Target: Function parameters that are constants, especially those involved in generic const expressions.

Mutation Rule:
1. Identify a function that accepts constant parameters, particularly involving generic const expressions (e.g., `butter_st::<f64, 4, 2>`).
2. Modify one of the constant parameters to an expression that can be evaluated at compile-time but is more complex, such as a const expression that combines several operations.
3. If no existing const expression is present in the seed program, declare a new const expression involving simple arithmetic or bitwise operations that results in the same type.

Example:
Original:
```rust
let filter = butter_st::<f64, 4, 2>(...);
```

Mutation:
```rust
const NEW_PARAM: usize = 2 * 2;
let filter = butter_st::<f64, 4, NEW_PARAM>(...);
```

This mutation applies to any function call with constant parameters, especially those employing generic const expressions, and aims to trigger compiler bugs related to constant evaluation during compilation.