Mutation Operator

Target: Array Indexing

Description: This mutation operator targets array or slice indexing operations. It modifies the index to potentially cause out-of-bounds access, which can lead to compiler errors or unexpected behavior.

Mutation Rule:
1. Identify array or slice indexing operations in the code, such as `arr[index]`.
2. Modify the index expression in a way that could lead to out-of-bounds access. Specifically, change it to `arr[arr.len()]` or `arr[arr.len() + constant]`, where `constant` is a positive integer.
3. Ensure that the array or slice being accessed and the modification do not involve undeclared variables or new types not already present in the seed program.

Example:
Original Code:
```
let values = [10, 20, 30, 40];
let _value = values[2];
```

Mutated Code:
```
let values = [10, 20, 30, 40];
let _value = values[values.len()];
```